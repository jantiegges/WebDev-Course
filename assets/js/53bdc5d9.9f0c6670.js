"use strict";(self.webpackChunkWebDev_Course=self.webpackChunkWebDev_Course||[]).push([[5376],{3905:(e,n,i)=>{i.d(n,{Zo:()=>d,kt:()=>k});var r=i(7294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function u(e,n){if(null==e)return{};var i,r,t=function(e,n){if(null==e)return{};var i,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var o=r.createContext({}),s=function(e){var n=r.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},d=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var i=e.components,t=e.mdxType,a=e.originalType,o=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),c=s(i),m=t,k=c["".concat(o,".").concat(m)]||c[m]||p[m]||a;return i?r.createElement(k,l(l({ref:n},d),{},{components:i})):r.createElement(k,l({ref:n},d))}));function k(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=i.length,l=new Array(a);l[0]=m;var u={};for(var o in n)hasOwnProperty.call(n,o)&&(u[o]=n[o]);u.originalType=e,u[c]="string"==typeof e?e:t,l[1]=u;for(var s=2;s<a;s++)l[s]=i[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,i)}m.displayName="MDXCreateElement"},9874:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var r=i(7462),t=(i(7294),i(3905));const a={sidebar_position:10},l="9. Vertiefung in JavaScript",u={unversionedId:"vertiefung-in-javascript/index",id:"vertiefung-in-javascript/index",title:"9. Vertiefung in JavaScript",description:"In diesem Kapitel werden wir uns mit einigen fortgeschrittenen Themen in JavaScript besch\xe4ftigen. Wir werden uns mit Funktionen, Random Numbers und Manipulation von HTML & CSS besch\xe4ftigen.",source:"@site/docs/9-vertiefung-in-javascript/index.md",sourceDirName:"9-vertiefung-in-javascript",slug:"/vertiefung-in-javascript/",permalink:"/WebDev-Course/docs/vertiefung-in-javascript/",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Aufgabe 5: Variablen erstellen",permalink:"/WebDev-Course/docs/einf\xfchrung-in-javascript/aufgabe-5-variablen-erstellen"},next:{title:"Aufgabe 1: Love Calculator Funktion erstellen",permalink:"/WebDev-Course/docs/vertiefung-in-javascript/aufgabe-1-love-calculator-funktion"}},o={},s=[{value:"1. Funktionen",id:"1-funktionen",level:2},{value:"Wof\xfcr brauchen wir Funktionen?",id:"wof\xfcr-brauchen-wir-funktionen",level:3},{value:"Funktionen erstellen",id:"funktionen-erstellen",level:3},{value:"Beispiel",id:"beispiel",level:4},{value:"Funktionen aufrufen",id:"funktionen-aufrufen",level:3},{value:"Beispiel",id:"beispiel-1",level:4},{value:"\ud83e\udd13 Aufgabe 1: Love Calculator Funktion erstellen",id:"-aufgabe-1-love-calculator-funktion-erstellen",level:3},{value:"Funktionen mit Parametern",id:"funktionen-mit-parametern",level:3},{value:"Beispiel",id:"beispiel-2",level:4},{value:"\ud83e\udd13 Aufgabe 2: Show Result Funktion",id:"-aufgabe-2-show-result-funktion",level:3},{value:"2. Random Number",id:"2-random-number",level:2},{value:"Beispiel",id:"beispiel-3",level:3},{value:"\ud83e\udd13 Aufgabe 3: Love Score berechnen",id:"-aufgabe-3-love-score-berechnen",level:3},{value:"3. HTML &amp; CSS Manipulation",id:"3-html--css-manipulation",level:2},{value:"Beispiel",id:"beispiel-4",level:4},{value:"Beispiel",id:"beispiel-5",level:4},{value:"\ud83e\udd13 Aufgabe 4: Love Score Result Seite",id:"-aufgabe-4-love-score-result-seite",level:3},{value:"4. Abschluss",id:"4-abschluss",level:2}],d={toc:s},c="wrapper";function p(e){let{components:n,...i}=e;return(0,t.kt)(c,(0,r.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"9-vertiefung-in-javascript"},"9. Vertiefung in JavaScript"),(0,t.kt)("p",null,"In diesem Kapitel werden wir uns mit einigen fortgeschrittenen Themen in JavaScript besch\xe4ftigen. Wir werden uns mit Funktionen, Random Numbers und Manipulation von HTML & CSS besch\xe4ftigen."),(0,t.kt)("h2",{id:"1-funktionen"},"1. Funktionen"),(0,t.kt)("p",null,"Funktionen sind ein sehr wichtiges Konzept in der Programmierung. Sie helfen uns, unseren Code zu strukturieren und zu organisieren. Wir k\xf6nnen Funktionen verwenden, um Code zu schreiben, der mehrmals ausgef\xfchrt werden soll. Wir k\xf6nnen auch Funktionen verwenden, um unseren Code in kleinere Teile zu unterteilen, die einfacher zu verstehen sind."),(0,t.kt)("admonition",{title:"Funktionen",type:"tip"},(0,t.kt)("p",{parentName:"admonition"},"Eine Funktion ist ein Codeblock, der eine bestimmte Aufgabe ausf\xfchrt. Stell dir eine Funktion wie ein kleines Programm vor, das eine bestimmte Aufgabe ausf\xfchrt. Jedes Mal, wenn du eine Funktion aufrufst, wird der Code in der Funktion ausgef\xfchrt.")),(0,t.kt)("h3",{id:"wof\xfcr-brauchen-wir-funktionen"},"Wof\xfcr brauchen wir Funktionen?"),(0,t.kt)("p",null,"Funktionen helfen uns, unseren Code zu strukturieren und zu organisieren. Wir k\xf6nnen Funktionen verwenden, um Code zu schreiben, der mehrmals ausgef\xfchrt werden soll. Wir k\xf6nnen auch Funktionen verwenden, um unseren Code in kleinere Teile zu unterteilen, die einfacher zu verstehen sind."),(0,t.kt)("h3",{id:"funktionen-erstellen"},"Funktionen erstellen"),(0,t.kt)("p",null,"Um eine Funktion zu erstellen, m\xfcssen wir das ",(0,t.kt)("inlineCode",{parentName:"p"},"function")," Schl\xfcsselwort verwenden. Nach dem ",(0,t.kt)("inlineCode",{parentName:"p"},"function")," Schl\xfcsselwort m\xfcssen wir den Namen der Funktion schreiben. Der Name der Funktion kann frei gew\xe4hlt werden. Nach dem Namen der Funktion m\xfcssen wir Klammern ",(0,t.kt)("inlineCode",{parentName:"p"},"()")," schreiben. Nach den Klammern m\xfcssen wir geschweifte Klammern ",(0,t.kt)("inlineCode",{parentName:"p"},"{}")," schreiben. In den geschweiften Klammern schreiben wir den Code, der ausgef\xfchrt werden soll, wenn die Funktion aufgerufen wird."),(0,t.kt)("h4",{id:"beispiel"},"Beispiel"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"function add() {\n  const sum = 1 + 2;\n\n  return sum;\n}\n")),(0,t.kt)("p",null,"Ihr k\xf6nnt sehen wie am Ende der Funktion das ",(0,t.kt)("inlineCode",{parentName:"p"},"return")," Schl\xfcsselwort verwendet wird. Das ",(0,t.kt)("inlineCode",{parentName:"p"},"return")," Schl\xfcsselwort gibt den Wert zur\xfcck, der nach dem ",(0,t.kt)("inlineCode",{parentName:"p"},"return")," Schl\xfcsselwort steht. In diesem Fall geben wir die Summe zur\xfcck."),(0,t.kt)("h3",{id:"funktionen-aufrufen"},"Funktionen aufrufen"),(0,t.kt)("p",null,"Um eine Funktion aufzurufen, m\xfcssen wir den Namen der Funktion schreiben und Klammern ",(0,t.kt)("inlineCode",{parentName:"p"},"()")," dahinter schreiben. Falls die Funktion einen Wert zur\xfcckgibt, k\xf6nnen wir den Wert in einer Variable speichern."),(0,t.kt)("h4",{id:"beispiel-1"},"Beispiel"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"function add() {\n  const sum = 1 + 2;\n\n  return sum;\n}\n\nconst result = add();\n")),(0,t.kt)("h3",{id:"-aufgabe-1-love-calculator-funktion-erstellen"},(0,t.kt)("a",{parentName:"h3",href:"aufgabe-1-love-calculator-funktion"},"\ud83e\udd13 Aufgabe 1: Love Calculator Funktion erstellen")),(0,t.kt)("h3",{id:"funktionen-mit-parametern"},"Funktionen mit Parametern"),(0,t.kt)("p",null,"Nun wissen wir, wie wir eine Funktion erstellen und aufrufen k\xf6nnen. Damit wir die Funktionen noch besser nutzen k\xf6nnen, k\xf6nnen wir Parameter verwenden."),(0,t.kt)("admonition",{title:"Parameter",type:"tip"},(0,t.kt)("p",{parentName:"admonition"},"Parameter sind Werte, die wir der Funktion \xfcbergeben k\xf6nnen. Wenn wir eine Funktion aufrufen, k\xf6nnen wir Werte an die Funktion \xfcbergeben. Stellen wir uns vor, wir haben eine Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"add"),", die zwei Zahlen addiert. Wir k\xf6nnen der Funktion zwei Zahlen \xfcbergeben, die addiert werden sollen. Die Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"add")," hat zwei Parameter, die wir in den Klammern schreiben: ",(0,t.kt)("inlineCode",{parentName:"p"},"function add(a, b)"),". Wenn wir die Funktion aufrufen, k\xf6nnen wir zwei Zahlen \xfcbergeben: ",(0,t.kt)("inlineCode",{parentName:"p"},"add(1, 2)"),". In der Funktion k\xf6nnen wir die Zahlen ",(0,t.kt)("inlineCode",{parentName:"p"},"1")," und ",(0,t.kt)("inlineCode",{parentName:"p"},"2")," nun verwenden, um die Summe zu berechnen.")),(0,t.kt)("h4",{id:"beispiel-2"},"Beispiel"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"function add(a, b) {\n  const sum = a + b;\n\n  return sum;\n}\n")),(0,t.kt)("p",null,"Dadurch k\xf6nnen wir Funktionen noch flexibler nutzen, da wir die Werte, die wir der Funktion \xfcbergeben, \xe4ndern k\xf6nnen."),(0,t.kt)("h3",{id:"-aufgabe-2-show-result-funktion"},(0,t.kt)("a",{parentName:"h3",href:"aufgabe-2-show-result-funktion"},"\ud83e\udd13 Aufgabe 2: Show Result Funktion")),(0,t.kt)("h2",{id:"2-random-number"},"2. Random Number"),(0,t.kt)("p",null,"Bisher haben wir immer mit festen Werten gearbeitet. Wir haben zum Beispiel immer den Love Score ",(0,t.kt)("inlineCode",{parentName:"p"},"100")," zur\xfcckgegeben. In der Realit\xe4t wollen wir aber, dass der Love Score zuf\xe4llig berechnet wird. Daf\xfcr k\xf6nnen wir die JavaScript Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"Math.random()")," verwenden."),(0,t.kt)("admonition",{title:"Math.random()",type:"tip"},(0,t.kt)("p",{parentName:"admonition"},"Die Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"Math.random()")," gibt eine zuf\xe4llige Zahl zwischen ",(0,t.kt)("inlineCode",{parentName:"p"},"0")," und ",(0,t.kt)("inlineCode",{parentName:"p"},"1")," zur\xfcck. Die Zahl kann auch ",(0,t.kt)("inlineCode",{parentName:"p"},"0")," sein, aber sie kann nicht ",(0,t.kt)("inlineCode",{parentName:"p"},"1")," sein.")),(0,t.kt)("h3",{id:"beispiel-3"},"Beispiel"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const randomNumber = Math.random();\n")),(0,t.kt)("h3",{id:"-aufgabe-3-love-score-berechnen"},(0,t.kt)("a",{parentName:"h3",href:"aufgabe-3-love-score-berechnen"},"\ud83e\udd13 Aufgabe 3: Love Score berechnen")),(0,t.kt)("h2",{id:"3-html--css-manipulation"},"3. HTML & CSS Manipulation"),(0,t.kt)("p",null,"Bisher haben wir das Ergebnis immer nur in einem ",(0,t.kt)("inlineCode",{parentName:"p"},"alert")," angezeigt. In der Realit\xe4t wollen wir aber, dass das Ergebnis in der HTML Seite angezeigt wird. Daf\xfcr m\xfcssen wir den HTML Code manipulieren. Daf\xfcr k\xf6nnen wir etwas verwenden, was wir bereits in der letzten Lektion kennengelernt haben: Selektoren."),(0,t.kt)("p",null,"Zun\xe4chst k\xf6nnen wir n\xe4mlich das HTML-Element ausw\xe4hlen, welches wir ver\xe4ndern wollen. Daf\xfcr k\xf6nnen wir einen Selektor verwenden. Diesem Element k\xf6nnen wir dann einfach einen neuen Wert zuweisen, so wie wir es bereits mit Variablen gemacht haben."),(0,t.kt)("h4",{id:"beispiel-4"},"Beispiel"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'document.querySelector(".result-text").innerHTML = "Euer Love Score ist 100%";\n')),(0,t.kt)("p",null,"Neben dem HTML Code, k\xf6nnen wir auch den CSS Code manipulieren. Daf\xfcr k\xf6nnen wir die ",(0,t.kt)("inlineCode",{parentName:"p"},"style")," Eigenschaft verwenden. Wir k\xf6nnen der ",(0,t.kt)("inlineCode",{parentName:"p"},"style")," Eigenschaft einen neuen Wert zuweisen, so wie wir es bereits mit Variablen gemacht haben."),(0,t.kt)("h4",{id:"beispiel-5"},"Beispiel"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'document.querySelector(".result-text").style.color = "red";\n')),(0,t.kt)("p",null,"In der folgenden Aufgabe wollen wir nun das Ergebnis unserer Love Score Berechnung in der HTML Seite anzeigen."),(0,t.kt)("h3",{id:"-aufgabe-4-love-score-result-seite"},(0,t.kt)("a",{parentName:"h3",href:"aufgabe-4-love-score-result"},"\ud83e\udd13 Aufgabe 4: Love Score Result Seite")),(0,t.kt)("h2",{id:"4-abschluss"},"4. Abschluss"),(0,t.kt)("p",null,"In diesem Kapitel haben wir unsere Love Calculator funktioneller gestaltet. Wir berechnen nun einen zu zuf\xe4lligen Love Score und zeigen das Ergebnis in der HTML Seite an. In der n\xe4chsten Lektion werden wir uns mit if-else Statements besch\xe4ftigen, um noch pr\xe4zisere Love Scores zu berechnen."))}p.isMDXComponent=!0}}]);